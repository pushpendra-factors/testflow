version: '3'

services:
        postgres:
            build:
                context: ../
                dockerfile: docker-development-setup/Dockerfile.postgres.testing
                args:
                    -  POSTGRES_VERSION=12.2-alpine
            environment:
                 - POSTGRES_USER=autometa
                 - POSTGRES_PASSWORD=@ut0me7a
                 - POSTGRES_DB=autometa
            image: testing/postgres:1.0
            restart: always
            ports:
                - '5432:5432'
        builddb:
            depends_on:
                - postgres
            build:
                context: ../
                dockerfile: docker-development-setup/Dockerfile.db_create.testing
            environment:
                - DB_HOST=postgres
            image: testing/builddb:1.0
            links:
                - postgres
        redis:
            build:
                context: ../
                dockerfile: Dockerfile.redis
            image: testing/redis:1.0
            restart: always
            ports:
                - "6379:6379"
        etcd:
            build:
                context: ../
                dockerfile: docker-development-setup/Dockerfile.etcd.testing
                args:
                    - ETCD_VERSION=3
            image: testing/etcd:1.0
            restart: always
            environment:
                - ALLOW_NONE_AUTHENTICATION=yes
                - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
            ports:
                - "2379:2379"
                - "2380:2380"
        api:
            build:
                context: ../
                dockerfile: Dockerfile.appserver
            environment:
                -  GOPATH=/go/src/factors
                -  DB_HOST=postgres
                -  REDIS_HOST=redis
                -  ETCD=etcd:2379
                -  PS=patternserver
            entrypoint: [ "sh","-c","/go/bin/app --db_host=postgres --redis_host=redis --etcd=etcd:2379"]
            image: testing/api:1.0
            restart: always
            ports:
                - "8080:8080"
            volumes: 
                - ../../../geolocation_data:/usr/local/var/factors/geolocation_data
                - ../../../devicedetector_data:/usr/local/var/factors/devicedetector_data
        patternserver:
            build:
                context: ../
                dockerfile: Dockerfile.patternserver
            environment:
                -   GOPATH=/go/src/factors
                -   ETCD=etcd:2379
            image: testing/pattern-server:1.0
            entrypoint: ["sh", "-c", "/go/bin/pattern-app --etcd=etcd:2379"]
            volumes: 
                - ${BUCKET_DIR}:/usr/local/var/factors
            ports:
                - "8100:8100"
        dataserver:
            depends_on:
                - postgres
            build:
                context: ../
                dockerfile: Dockerfile.dataserver
            environment:
                -   GOPATH=/go/src/factors
                -   DB_HOST=postgres
            entrypoint: ["sh","-c", "/go/bin/dataserver --db_host=postgres"]
            image: testing/dataserver:1.0
            restart: always
            ports:
                -  "8089:8089"
        frontend:
            build: 
                context: ../../../frontend
                dockerfile: docker-development-setup/Dockerfile.frontend.testing
            image: testing/frontend:1.0
            ports: 
                - "127.0.0.1:3000:3000"
            


        
            
