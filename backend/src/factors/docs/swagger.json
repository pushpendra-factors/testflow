{
    "swagger": "2.0",
    "info": {
        "description": "Factors usage doc for golang api server.",
        "title": "Factors Backend Api",
        "contact": {},
        "license": {},
        "version": "1.0"
    },
    "host": "factors-dev.com:8080",
    "basePath": "/projects",
    "paths": {
        "/{project_id}/dashboards": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboard"
                ],
                "summary": "Fetches all dashboards for the given project id.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "project_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Dashboard"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dashboard"
                ],
                "summary": "Creates a new dashboard for the given input.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "project_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Create new dashboard",
                        "name": "unit",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/DashboardRequestPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.Dashboard"
                        }
                    }
                }
            }
        },
        "/{project_id}/dashboards/{dashboard_id}/units": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DashboardUnit"
                ],
                "summary": "Creates a new dashboard unit for the given input.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "project_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Dashboard ID",
                        "name": "dashboard_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Create dashboard unit",
                        "name": "unit",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.DashboardUnitRequestPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.DashboardUnit"
                        }
                    }
                }
            }
        },
        "/{project_id}/settings": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ProjectSettings"
                ],
                "summary": "Retrieves the project settings for given project id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Project ID",
                        "name": "project_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/model.ProjectSetting"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Dashboard": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "description": "Composite primary key, id + project_id + agent_id.",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "project_id": {
                    "description": "Foreign key dashboards(project_id) ref projects(id).",
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "units_position": {
                    "description": "map[string]map[uint64]int -\u003e map[unit_type]unit_id:unit_position",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.DashboardUnit": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "dashboard_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "description": "Composite primary key, id + project_id.",
                    "type": "integer"
                },
                "presentation": {
                    "type": "string"
                },
                "project_id": {
                    "description": "Foreign key dashboard_units(project_id) ref projects(id).",
                    "type": "integer"
                },
                "query": {
                    "description": "TODO (Anil) remove this field once we move to saved queries",
                    "type": "string"
                },
                "query_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.DashboardUnitRequestPayload": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "presentation": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "query_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.ProjectSetting": {
            "type": "object",
            "properties": {
                "archive_enabled": {
                    "description": "Archival related fields.",
                    "type": "boolean"
                },
                "auto_form_capture": {
                    "type": "boolean"
                },
                "auto_track": {
                    "description": "Using pointers to avoid update by default value.\nomit empty to avoid nil(filelds not updated) on resp json.",
                    "type": "boolean"
                },
                "bigquery_enabled": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "exclude_bot": {
                    "type": "boolean"
                },
                "int_adwords_customer_account_id": {
                    "type": "string"
                },
                "int_adwords_enabled_agent_uuid": {
                    "description": "Adwords integration settings.\nForeign key constraint int_adwords_enabled_agent_uuid -\u003e agents(uuid)\nTodo: Set int_adwords_enabled_agent_uuid, int_adwords_customer_account_id to NULL\nfor disabling adwords integration for the project.",
                    "type": "string"
                },
                "int_facebook_access_token": {
                    "type": "string"
                },
                "int_facebook_ad_account": {
                    "type": "string"
                },
                "int_facebook_agent_uuid": {
                    "type": "string"
                },
                "int_facebook_email": {
                    "description": "Facebook settings",
                    "type": "string"
                },
                "int_facebook_user_id": {
                    "type": "string"
                },
                "int_hubspot": {
                    "description": "Hubspot integration settings.",
                    "type": "boolean"
                },
                "int_hubspot_api_key": {
                    "type": "string"
                },
                "int_salesforce_enabled_agent_uuid": {
                    "description": "Salesforce settings",
                    "type": "string"
                },
                "int_segment": {
                    "description": "Segment integration settings.",
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }
}