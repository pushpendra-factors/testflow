basePath: /projects
definitions:
  model.Dashboard:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        description: Composite primary key, id + project_id + agent_id.
        type: integer
      name:
        type: string
      project_id:
        description: Foreign key dashboards(project_id) ref projects(id).
        type: integer
      type:
        type: string
      units_position:
        description: map[string]map[uint64]int -> map[unit_type]unit_id:unit_position
        type: string
      updated_at:
        type: string
    type: object
  model.DashboardUnit:
    properties:
      created_at:
        type: string
      dashboard_id:
        type: integer
      description:
        type: string
      id:
        description: Composite primary key, id + project_id.
        type: integer
      presentation:
        type: string
      project_id:
        description: Foreign key dashboard_units(project_id) ref projects(id).
        type: integer
      query:
        description: TODO (Anil) remove this field once we move to saved queries
        type: string
      query_id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
  model.DashboardUnitRequestPayload:
    properties:
      description:
        type: string
      presentation:
        type: string
      query:
        type: string
      query_id:
        type: integer
      title:
        type: string
    type: object
  model.ProjectSetting:
    properties:
      archive_enabled:
        description: Archival related fields.
        type: boolean
      auto_form_capture:
        type: boolean
      auto_track:
        description: |-
          Using pointers to avoid update by default value.
          omit empty to avoid nil(filelds not updated) on resp json.
        type: boolean
      bigquery_enabled:
        type: boolean
      created_at:
        type: string
      exclude_bot:
        type: boolean
      int_adwords_customer_account_id:
        type: string
      int_adwords_enabled_agent_uuid:
        description: |-
          Adwords integration settings.
          Foreign key constraint int_adwords_enabled_agent_uuid -> agents(uuid)
          Todo: Set int_adwords_enabled_agent_uuid, int_adwords_customer_account_id to NULL
          for disabling adwords integration for the project.
        type: string
      int_facebook_access_token:
        type: string
      int_facebook_ad_account:
        type: string
      int_facebook_agent_uuid:
        type: string
      int_facebook_email:
        description: Facebook settings
        type: string
      int_facebook_user_id:
        type: string
      int_hubspot:
        description: Hubspot integration settings.
        type: boolean
      int_hubspot_api_key:
        type: string
      int_salesforce_enabled_agent_uuid:
        description: Salesforce settings
        type: string
      int_segment:
        description: Segment integration settings.
        type: boolean
      updated_at:
        type: string
    type: object
host: factors-dev.com:8080
info:
  contact: {}
  description: Factors usage doc for golang api server.
  license: {}
  title: Factors Backend Api
  version: "1.0"
paths:
  /{project_id}/dashboards:
    get:
      consumes:
      - application/json
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Dashboard'
            type: array
      summary: Fetches all dashboards for the given project id.
      tags:
      - Dashboard
    post:
      consumes:
      - application/json
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: integer
      - description: Create new dashboard
        in: body
        name: unit
        required: true
        schema:
          $ref: '#/definitions/DashboardRequestPayload'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Dashboard'
            type: object
      summary: Creates a new dashboard for the given input.
      tags:
      - Dashboard
  /{project_id}/dashboards/{dashboard_id}/units:
    post:
      consumes:
      - application/json
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: integer
      - description: Dashboard ID
        in: path
        name: dashboard_id
        required: true
        type: integer
      - description: Create dashboard unit
        in: body
        name: unit
        required: true
        schema:
          $ref: '#/definitions/model.DashboardUnitRequestPayload'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.DashboardUnit'
            type: object
      summary: Creates a new dashboard unit for the given input.
      tags:
      - DashboardUnit
  /{project_id}/settings:
    get:
      parameters:
      - description: Project ID
        in: path
        name: project_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.ProjectSetting'
            type: object
      summary: Retrieves the project settings for given project id
      tags:
      - ProjectSettings
swagger: "2.0"
