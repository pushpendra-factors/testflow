apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    layer: persistent-redis
    env: production
    project: factors-production
    nodePool: persistent-redis-pool
  name: persistent-redis
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      layer: persistent-redis
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:      
      labels:
        layer: persistent-redis
        nodePool: persistent-redis-pool
    spec:
      nodeSelector:
        cloud.google.com/gke-nodepool: persistent-redis-pool
      terminationGracePeriodSeconds: 30
      volumes:
        - name: persistent-redis-storage-new
          persistentVolumeClaim:
            claimName: persistent-redis-pvc-new
      containers:
      - name: persistent-redis
        image: us.gcr.io/factors-production/persistent-redis:v0.02-487dd3b
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: persistent-redis-storage-new
          mountPath: "/usr/local/var/db/redis"
        resources:
          requests:
            memory: "61G"
            cpu: "7"
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        securityContext: {}
        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 10
          periodSeconds: 10