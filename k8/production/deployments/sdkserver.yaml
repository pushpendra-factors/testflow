apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    layer: sdkserver
    env: production
    project: factors-production
  name: sdkserver
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      layer: sdkserver
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:      
      labels:
        layer: sdkserver
    spec:
      nodeSelector:
        cloud.google.com/gke-nodepool: persistent-pool-standard
      containers:
      - name: sdkserver
        image: us.gcr.io/factors-production/sdk-server:v0.01-19b627a
        ports:
        - containerPort: 8085
        volumeMounts:
        - name: workdir
          mountPath: /usr/local/var/factors/config
        imagePullPolicy: IfNotPresent
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        resources:
          requests:
            memory: "100M"
        securityContext: {}
        readinessProbe:
          tcpSocket:
            port: 8085
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 8085
          initialDelaySeconds: 10
          periodSeconds: 10
        args:
          - --env
          - $(ENV)
          - --port
          - $(SDK_SERVER_PORT)
          - --db_host
          - $(DB_HOST)
          - --db_port
          - $(DB_PORT)
          - --db_name
          - $(POSTGRES_DB)
          - --db_user
          - $(POSTGRES_USER)
          - --db_pass
          - $(POSTGRES_PASSWORD)
          - --redis_host
          - $(REDIS_HOST)
          - --redis_port
          - $(REDIS_PORT)
          - --queue_redis_host
          - $(PERSISTENT_REDIS_HOST)
          - --queue_redis_port
          - $(PERSISTENT_REDIS_PORT)
          - --geo_loc_path
          - $(GEO_LOC_FILE_PATH)
          - --aws_region
          - $(AWS_REGION)
          - --aws_key
          - $(AWS_KEY)
          - --aws_secret
          - $(AWS_SECRET)
          - --email_sender
          - $(EMAIL_SENDER)
          - --sdk_request_queue_project_tokens
          - $(SDK_REQUEST_QUEUE_PROJECT_TOKENS)
          - --segment_request_queue_project_tokens
          - $(SEGMENT_REQUEST_QUEUE_PROJECT_TOKENS)
          - --skip_session_project_ids
          - $(OFFLINE_SESSION_PROJECT_IDS)
          - --merge_usp_project_ids
          - $(MERGE_USP_PROJECT_IDS)
          - --sentry_dsn
          - $(SENTRY_DSN)
          - --redis_host_ps
          - $(PERSISTENT_REDIS_HOST)
          - --redis_port_ps
          - $(PERSISTENT_REDIS_PORT)
          - --real_time_event_user_caching_project_ids
          - "2"
        env:
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP              
        envFrom:
        - configMapRef:
            name: config-sdkserver
        - configMapRef:
            name: config-appserver
        - configMapRef:
            name: config-sdkglobalconfig
        - configMapRef:
            name: config-env
        - configMapRef:
            name: config-postgres
        - configMapRef:
            name: config-redis
        - configMapRef:
            name: config-persistent-redis
        - configMapRef:
            name: config-add-session-job
        - secretRef:
            name: secret-postgres
        - secretRef:
            name: secret-aws
        - secretRef:
            name: secret-sentry
      initContainers:
      - name: fetch-geolocation-file
        image: google/cloud-sdk:229.0.0-alpine
        command:
        - gsutil
        - cp
        - gs://factors-production/GeoLite2-City.mmdb
        - /workdir/GeoLite2-City.mmdb
        volumeMounts:
        - name: workdir
          mountPath: "/workdir"    
      - name: fetch-device-detector-data
        image: google/cloud-sdk:229.0.0-alpine
        command:
        - gsutil 
        - rsync 
        - -r 
        - gs://factors-production/device_detector_regexs
        - /workdir
        volumeMounts:
        - name: workdir
          mountPath: "/workdir"
      volumes:
      - name: workdir
        emptyDir: {}
