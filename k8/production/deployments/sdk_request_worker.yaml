apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    layer: sdk-request-worker
    env: production
    project: factors-production
    nodePool: workers-pool
  name: sdk-request-worker
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      layer: sdk-request-worker
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:      
      labels:
        layer: sdk-request-worker
        nodePool: workers-pool
    spec:
      nodeSelector:
        cloud.google.com/gke-nodepool: workers-pool
      containers:
      - name: sdk-request-worker
        image: us.gcr.io/factors-production/sdk-request-worker:v1.13-1d6b430-721
        volumeMounts:
        - name: workdir
          mountPath: /usr/local/var/factors/config
        imagePullPolicy: IfNotPresent
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        resources:
          requests:
            cpu: "300m"
        securityContext: {}
        args:
          - --env
          - $(ENV)
          - --memsql_host
          - $(MEMSQL_HOST)
          - --memsql_port
          - $(MEMSQL_PORT)
          - --memsql_name
          - $(MEMSQL_DB)
          - --memsql_user
          - $(MEMSQL_OLTP_USER)
          - --memsql_pass
          - $(MEMSQL_PASSWORD)
          - --memsql_cert
          - $(MEMSQL_CERTIFICATE)
          - --redis_host
          - $(REDIS_HOST)
          - --redis_port
          - $(REDIS_PORT)
          - --queue_redis_host
          - $(QUEUE_REDIS_HOST)
          - --queue_redis_port
          - $(QUEUE_REDIS_PORT)
          - --geo_loc_path
          - $(GEO_LOC_FILE_PATH)
          - --worker_concurrency
          - "20"
          - --device_detector_path
          - $(DEVICE_DETECTOR_DATA_PATH)
          - --sentry_dsn
          - $(SENTRY_DSN)
          - --redis_host_ps
          - $(PERSISTENT_REDIS_HOST)
          - --redis_port_ps
          - $(PERSISTENT_REDIS_PORT)
          - --gcp_project_id
          - $(GCP_PROJECT_ID)
          - --gcp_project_location
          - $(GCP_PROJECT_LOCATION)
          - --allow_support_for_user_properties_in_identify_call
          - "2"
          - --cache_with_sorted_set
          - --ingestion_timezone_enabled_projects
          - ''          
        envFrom:
        - configMapRef:
            name: config-appserver
        - configMapRef:
            name: config-env
        - configMapRef:
            name: config-redis
        - configMapRef:
            name: config-persistent-redis
        - configMapRef:
            name: config-queue-redis
        - configMapRef:
            name: config-add-session-job
        - configMapRef:
            name: config-memsql
        - secretRef:
            name: secret-memsql
        - secretRef:
            name: secret-sentry
      initContainers:
      - name: fetch-geolocation-file
        image: google/cloud-sdk:229.0.0-alpine
        command:
        - gsutil
        - cp
        - gs://factors-production/GeoLite2-City.mmdb
        - /workdir/GeoLite2-City.mmdb
        volumeMounts:
        - name: workdir
          mountPath: "/workdir"
      - name: fetch-device-detector-data
        image: google/cloud-sdk:229.0.0-alpine
        command:
        - gsutil 
        - rsync 
        - -r 
        - gs://factors-production/device_detector_regexs
        - /workdir
        volumeMounts:
        - name: workdir
          mountPath: "/workdir"    
      volumes:
      - name: workdir
        emptyDir: {}
