name: Deploy Backend - Staging

on:
  workflow_dispatch:
    inputs:
      image_id:
        description: "Image Tag"
        required: true
        default: "test"
      binary:
        description: "Binary Name"
        required: true
        default: ""

env:
  PROJECT_ID: ${{ secrets.GKE_STAGING_PROJECT }}
  GKE_CLUSTER: factors-staging # TODO: update to cluster name
  GKE_ZONE: us-west1-b # TODO: update to cluster zone
  DEPLOYMENT_NAME: pattern_mine_job # TODO: update to deployment name
  PATH_TO_FACTORS: /home/runner/work/factors
  DEV_NAME: ${{ github.actor}}
  IMAGE: pattern_mine

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish
    runs-on: ubuntu-latest
    environment: staging
    if: github.ref == 'refs/heads/staging'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Show GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Show GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$DEV_NAME"

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GKE_STAGING_SA_KEY }}
          project_id: ${{ secrets.GKE_STAGING_PROJECT }}

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker

      - name: Build binary
        env:
          GOPATH: ${{ env.PATH_TO_FACTORS }}/factors/backend
          IMAGE_NAME: ${{ github.event.inputs.image_id}}
        working-directory: ${{ env.PATH_TO_FACTORS}}/factors
        run: |

          binary="${{ github.event.inputs.binary}}"
          path="./"
          if [[ "$binary" == "linkedin-sync-dup" || "$binary" == "linkedin-company-sync" ]]; then
              path="./integrations/linkedin_v1/scripts"
          
          elif [[ "$binary" == "linkedin-sync" || "$binary" == "adwords-sync" || "$binary" == "hubspot-sync" || "$binary" == "facebook-sync" ]]; then
              substring="${binary%-*}"
              path="./integrations/$substring/scripts"

          elif [[ "$binary" == "python-server" || "$binary" == "adwords-etl" || "$binary" == "adwords-etl-debug" || "$binary" == "facebook-etl" || "$binary" == "google-search-console-etl" ]]; then
              path="./python_backend"

          elif [[ "$binary" == "device-server" ]]; then
              path="./device_service"
          
          elif [[ "$binary" == "product-analytics-job" ]]; then
              path="./product_analytics_gsheet"   

          else
              path="./backend/src"
          fi

          cd "$path"  

          TAG=${{ env.IMAGE_NAME}} ENV=staging make pack-${{ github.event.inputs.binary}}

      - name: Publish binary
        env:
          GOPATH: ${{ env.PATH_TO_FACTORS }}/factors/backend
          IMAGE_NAME: ${{ github.event.inputs.image_id}}
        working-directory: ${{ env.PATH_TO_FACTORS}}/factors
        run: |

          binary="${{ github.event.inputs.binary}}"
          path="./"
          if [[ "$binary" == "linkedin-sync" || "$binary" == "adwords-sync" || "$binary" == "hubspot-sync" || "$binary" == "facebook-sync" ]]; then
              substring="${binary%-*}"
              path="./integrations/$substring/scripts"

          elif [[ "$binary" == "python-server" || "$binary" == "adwords-etl" || "$binary" == "adwords-etl-debug" || "$binary" == "facebook-etl" || "$binary" == "google-search-console-etl" ]]; then
              path="./python_backend"

          elif [[ "$binary" == "device-server" ]]; then
              path="./device_service"
          
          elif [[ "$binary" == "product-analytics-job" ]]; then
              path="./product_analytics_gsheet"                    
          
          else
              path="./backend/src"
          fi

          cd "$path"  

          TAG=${{ env.IMAGE_NAME}} ENV=staging make upload-${{ github.event.inputs.binary}}
