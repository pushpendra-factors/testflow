name: pattern-mine-setup-build-publish

on:
  workflow_dispatch:
    inputs:
      image_id:
        description: 'image_name'
        required: true
        default: ''
      env_value:
        description: 'environment'
        required: true
        default: 'staging'


    
env:
  DEPLOYMENT_NAME: pattern_mine_job # TODO: update to deployment name
  PATH_TO_FACTORS : /home/runner/work/factors
  IMAGE: pattern_mine


jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
    - name: Setting Environment
      if : ${{ github.event.inputs.env_value == 'staging' }}
      run: echo "Setting environment  ${{github.events.inputs.env_val}}"
           echo "GKE_CLUSTER=factors-staging" >> $GITHUB_ENV
           echo "GKE_ZONE=us-west1-b" >> $GITHUB_ENV
           echo "ENV=staging" >> $GITHUB_ENV

          
    - name: Setting Environment
      if : ${{ github.event.inputs.env_value == 'production' }}
      run: echo "Setting environment  ${{github.events.inputs.env_val}}"
           echo "GKE_CLUSTER=factors-production" >> $GITHUB_ENV
           echo "GKE_ZONE=us-west1-b" >> $GITHUB_ENV
           echo "ENV=production" >> $GITHUB_ENV

    - name : Environment used 
      run: echo "Using environment ${{ env.ENV }}" 

      
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17
    - run: go version
        
    # Setup gcloud CLI
    - name : Setup glcoud CLI
    - if : ${{ github.event.inputs.env_value == 'production' }}
    - uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ env.GKE_PRODUCTION_SA_KEY}}
        project_id: ${{ env.GKE_PRODUCTION_PROJECT }}

    # Setup gcloud CLI
    - name : Setup glcoud CLI
    - if : ${{ github.event.inputs.env_value == 'staging' }}
    - uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ env.GKE_STAGING_SA_KEY}}
        project_id: ${{ env.GKE_STAGING_PROJECT }}


    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
    
    - name: Build Pattern Mine 
      env : 
        GOPATH: ${{ env.PATH_TO_FACTORS }}/factors/backend
        IMAGE_NAME: ${{ github.event.inputs.image_id }}
      working-directory: ${{ env.GOPATH }}/src
      run : TAG=${{ env.IMAGE_NAME }} ENV=${{ env.ENV }} make pack-pattern-mine


    - name: Publish Pattern Mine 
      env : 
        GOPATH: ${{ env.PATH_TO_FACTORS }}/factors/backend
        IMAGE_NAME: ${{ github.event.inputs.image_id}}
      working-directory: ${{ env.GOPATH }}/src
      run : TAG=${{ env.IMAGE_NAME}} ENV=${{ env.ENV }} make upload-pattern-mine
